<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.wei.dao.RoleMapper">

    <!--查询所有角色(条件)-->
    <select id="findAllRole" parameterType="com.wei.domain.Role" resultType="com.wei.domain.Role">
        select * from roles
        <where>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
        </where>
    </select>

    <!--添加角色-->
    <insert id="saveRole" parameterType="com.wei.domain.Role">
        insert into roles values(null,#{code},#{name},#{description},#{createdTime},
        #{updatedTime},#{createdBy},#{updatedBy})
    </insert>

    <!--修改角色-->
    <update id="updateRole" parameterType="com.wei.domain.Role">
        update roles
        <trim prefix="SET" suffixOverrides=",">
            <if test="code != null and code != ''">
                code = #{code},
            </if>

            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="description != null and description != ''">
                description = #{description},
            </if>

            <if test="createdTime != null">
                created_time = #{createdTime},
            </if>

            <if test="updatedTime != null">
                updated_time = #{updatedTime},
            </if>

            <if test="createdBy != null">
                created_by = #{createdBy},
            </if>

            <if test="updatedBy != updatedBy">
                updated_by = #{updatedBy},
            </if>
        </trim>

        <where>
            <if test="id != null and id != '' ">
                id = #{id}
            </if>
        </where>
    </update>

    <!--删除角色-->
    <delete id="deleteRole" parameterType="int">
        delete from roles where id = #{roleid}
    </delete>

    <!--根据角色ID查询该角色关联的菜单信息ID-->
    <select id="findMenuByRoleId" resultType="int" parameterType="int">
        SELECT m.id
        FROM roles r INNER JOIN role_menu_relation rm ON r.id = rm.role_id
        INNER JOIN menu m ON m.id = rm.menu_id WHERE r.id = #{id}
    </select>

    <!--根据roleid删除在中间表与菜单的关联关系-->
    <delete id="deleteRoleContextMenu" parameterType="int">
        delete from role_menu_relation where role_id = #{rid}
    </delete>

    <!--为角色分配菜单-->
    <insert id="roleContextMenu" parameterType="com.wei.domain.Role_menu_relation">
        insert into role_menu_relation values(null,#{menuId},#{roleId},#{createdTime},
        #{updatedTime},#{createdBy},#{updatedby})
    </insert>

    <!--根据角色ID 查询角色拥有的资源分类-->
    <resultMap id="ResourceCate" type="com.wei.domain.ResourceCategory">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
    </resultMap>

    <select id="findResourceCategoryById" parameterType="int" resultMap="ResourceCate">
        SELECT
            rc.id,
            rc.name
        FROM resource_category rc LEFT JOIN resource r ON rc.id = r.category_id
        LEFT JOIN role_resource_relation rrr ON r.id = rrr.resource_id LEFT JOIN
        roles rs ON rrr.role_id = rs.id WHERE rs.id = #{id} GROUP BY  rc.id;
    </select>

    <!--根据角色ID 查询当前角色拥有的资源信息-->
    <select id="findResourceByRoleId" parameterType="int" resultType="com.wei.domain.Resource">
        SELECT
        distinct r.*
        FROM
        resource r INNER JOIN role_resource_relation rr ON r.id = rr.resource_id
        WHERE rr.role_id = #{id}
    </select>

    <!--根据角色ID 删除角色与资源的关联关系-->
    <delete id="deleteRoleContextResource" parameterType="int">
        delete from role_resource_relation where role_id =#{roleId}
    </delete>

    <!--为角色分配资源-->
    <insert id="roleContextResource" parameterType="com.wei.domain.RoleResourceRelation">
        insert into role_resource_relation
        values(null,#{resourceId}, #{roleId}, #{createdTime}, #{updatedTime}, #{createdBy}, #{updatedBy})
    </insert>

</mapper>